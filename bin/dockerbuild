#!/bin/bash
. .env
echo 'Validating folders'
if [ ! -d "site/dbdata" ]; then
mkdir -p site/dbdata;
fi
if [ ! -d "site/ssl" ]; then
mkdir -p site/ssl;
fi
if [ ! -d "site/n8n_data" ]; then
mkdir -p site/n8n_data;
fi
echo 'Folder validation complete'
echo 'Generating SSL'
cd site/ssl;
rm *.pem;
mkcert dbadmin.test;
mkcert llm.test;
mkcert n8n.test;
echo 'Generating SSL Complete'
echo 'Building containers'	

echo "Initializing Build"
export USER_PASSWORD=$USER_PASSWORD
export PHPVER=$PHPVER
export DBNAME=$DBNAME
export APP=$APP
export USER=`whoami`
export USERID=`id -u $USER`
export GROUP=`id -gn`
CLEAN=$1

# Build docker containers
echo "Building docker containers"
docker compose build --build-arg ARG_APP="$APP" --build-arg PHPVER="$PHPVER" --build-arg ARG_USER="$USER"  --build-arg ARG_USERID="$USERID" --build-arg ARG_GROUP="$GROUP" --build-arg ARG_USERPASS="$USER_PASSWORD" --build-arg DOCKERUSER=$DOCKERUSER --build-arg DOCKERGROUP=$DOCKERGROUP --build-arg DOCKERUSERID=$DOCKERUSERID
echo "Starting docker"
docker compose up -d
export PATH=$PATH:$SCRIPT_DIR/bin

sleep 30
for DOMAINVALUE in ${STACKDOMAINS[@]}; 

do
    echo "Generating Rabbit connection configuration for "$DOMAINVALUE
	echo `docker exec -it mydev_rabbitmq rabbitmqctl add_user $DOMAINVALUE q1w2e3r4`;
    echo `docker exec -it mydev_rabbitmq rabbitmqctl add_vhost $DOMAINVALUE`;
    echo `docker exec -it mydev_rabbitmq rabbitmqctl set_permissions -p $DOMAINVALUE $DOMAINVALUE '.*' '.*' '.*'`;
done

echo "Built from docker"
